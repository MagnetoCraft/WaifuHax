plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "meteor-maven"
        url = "https://maven.meteordev.org/releases"
    }
}

configurations {
    implementation.extendsFrom(library)
    shadow.extendsFrom(library)
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.26'
    implementation 'org.projectlombok:lombok:1.18.26'

    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    library 'org.json:json:20211205'
    library "meteordevelopment:orbit:0.2.3"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

shadowJar {
    configurations = [ project.configurations.shadow ]

    dependencies {
        exclude {
            it.moduleGroup == "org.slf4j"
        }
    }
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "devbuild": project.findProperty("devbuild") ?: "",
                "commit": project.findProperty("commit") ?: ""
    }
}

jar {
    from "LICENSE"

    manifest {
        attributes("Main-Class": "lol.waifuware.waifuhax.Waifuhax")
    }
}

remapJar {
    dependsOn shadowJar
    inputFile.set(shadowJar.archiveFile)
}

javadoc {
    options.addStringOption("Xdoclint:none", "-quiet")
    options.encoding = "UTF-8"
}